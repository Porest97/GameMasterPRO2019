// <auto-generated />
using System;
using GameManagerPRO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameManagerPRO.Migrations
{
    [DbContext(typeof(GameManagerPROContext))]
    partial class GameManagerPROContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview3.19153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameManagerPRO.Models.PROGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArenaId");

                    b.Property<int?>("AwayTeamScore");

                    b.Property<int?>("HomeTeamScore");

                    b.Property<DateTime>("MatchDateTime");

                    b.Property<int?>("MatchNumber");

                    b.Property<bool>("Payed");

                    b.Property<double>("Payment");

                    b.Property<int?>("PersonId");

                    b.Property<int?>("PersonId1");

                    b.Property<int?>("PersonId2");

                    b.Property<int?>("PersonId3");

                    b.Property<int?>("PersonId4");

                    b.Property<int?>("SeriesId");

                    b.Property<int?>("TSMNumber");

                    b.Property<int?>("TeamId");

                    b.Property<int?>("TeamId1");

                    b.Property<int?>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.HasIndex("PersonId2");

                    b.HasIndex("PersonId3");

                    b.HasIndex("PersonId4");

                    b.HasIndex("SeriesId");

                    b.HasIndex("TeamId");

                    b.HasIndex("TeamId1");

                    b.HasIndex("TournamentId");

                    b.ToTable("PROGame");
                });

            modelBuilder.Entity("GameManagerPRO.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TournamentName");

                    b.HasKey("Id");

                    b.ToTable("Tournament");
                });

            modelBuilder.Entity("ProPayment.Models.Arena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArenaName");

                    b.HasKey("Id");

                    b.ToTable("Arena");
                });

            modelBuilder.Entity("ProPayment.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArenaId");

                    b.Property<int?>("AwayTeamScore");

                    b.Property<int?>("HomeTeamScore");

                    b.Property<DateTime>("MatchDateTime");

                    b.Property<int?>("MatchNumber");

                    b.Property<int?>("PersonId");

                    b.Property<int?>("PersonId1");

                    b.Property<int?>("PersonId2");

                    b.Property<int?>("PersonId3");

                    b.Property<int?>("PersonId4");

                    b.Property<int?>("SeriesId");

                    b.Property<int?>("TSMNumber");

                    b.Property<int?>("TeamId");

                    b.Property<int?>("TeamId1");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.HasIndex("PersonId2");

                    b.HasIndex("PersonId3");

                    b.HasIndex("PersonId4");

                    b.HasIndex("SeriesId");

                    b.HasIndex("TeamId");

                    b.HasIndex("TeamId1");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("ProPayment.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("RefereeCategoryId");

                    b.Property<int?>("RefereeDistriktId");

                    b.Property<int?>("RefereeNumber");

                    b.Property<int?>("RefereeTypeId");

                    b.Property<string>("Ssn");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("RefereeCategoryId");

                    b.HasIndex("RefereeDistriktId");

                    b.HasIndex("RefereeTypeId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ProPayment.Models.RefereeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeCategoryName");

                    b.HasKey("Id");

                    b.ToTable("RefereeCategory");
                });

            modelBuilder.Entity("ProPayment.Models.RefereeDistrikt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeDistriktName");

                    b.HasKey("Id");

                    b.ToTable("RefereeDistrikt");
                });

            modelBuilder.Entity("ProPayment.Models.RefereeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeTypeName");

                    b.HasKey("Id");

                    b.ToTable("RefereeType");
                });

            modelBuilder.Entity("ProPayment.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SeriesName");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("ProPayment.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamName");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("GameManagerPRO.Models.PROGame", b =>
                {
                    b.HasOne("ProPayment.Models.Arena", "Arena")
                        .WithMany()
                        .HasForeignKey("ArenaId");

                    b.HasOne("ProPayment.Models.Person", "Referee1")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("ProPayment.Models.Person", "Referee2")
                        .WithMany()
                        .HasForeignKey("PersonId1");

                    b.HasOne("ProPayment.Models.Person", "Referee3")
                        .WithMany()
                        .HasForeignKey("PersonId2");

                    b.HasOne("ProPayment.Models.Person", "Referee4")
                        .WithMany()
                        .HasForeignKey("PersonId3");

                    b.HasOne("ProPayment.Models.Person", "Referee5")
                        .WithMany()
                        .HasForeignKey("PersonId4");

                    b.HasOne("ProPayment.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("ProPayment.Models.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.HasOne("ProPayment.Models.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("TeamId1");

                    b.HasOne("GameManagerPRO.Models.Tournament", "Tournament")
                        .WithMany()
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("ProPayment.Models.Game", b =>
                {
                    b.HasOne("ProPayment.Models.Arena", "Arena")
                        .WithMany()
                        .HasForeignKey("ArenaId");

                    b.HasOne("ProPayment.Models.Person", "Referee1")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("ProPayment.Models.Person", "Referee2")
                        .WithMany()
                        .HasForeignKey("PersonId1");

                    b.HasOne("ProPayment.Models.Person", "Referee3")
                        .WithMany()
                        .HasForeignKey("PersonId2");

                    b.HasOne("ProPayment.Models.Person", "Referee4")
                        .WithMany()
                        .HasForeignKey("PersonId3");

                    b.HasOne("ProPayment.Models.Person", "Referee5")
                        .WithMany()
                        .HasForeignKey("PersonId4");

                    b.HasOne("ProPayment.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("ProPayment.Models.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.HasOne("ProPayment.Models.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("TeamId1");
                });

            modelBuilder.Entity("ProPayment.Models.Person", b =>
                {
                    b.HasOne("ProPayment.Models.RefereeCategory", "RefereeCategory")
                        .WithMany()
                        .HasForeignKey("RefereeCategoryId");

                    b.HasOne("ProPayment.Models.RefereeDistrikt", "RefereeDistrikt")
                        .WithMany()
                        .HasForeignKey("RefereeDistriktId");

                    b.HasOne("ProPayment.Models.RefereeType", "RefereeType")
                        .WithMany()
                        .HasForeignKey("RefereeTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
